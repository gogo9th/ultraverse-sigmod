//
// Created by cheesekun on 1/9/23.
//

#include "StringUtil.hpp"

#include <sstream>
#include <vector>
#include <utility>

namespace ultraverse::utility {
    std::vector<std::string> split(const std::string &inputStr, char character) {
        std::vector<std::string> list;
    
        std::stringstream sstream(inputStr);
        std::string string;
    
        while (std::getline(sstream, string, character)) {
            list.push_back(string);
        }
    
        return std::move(list);
    }
    
    std::string replaceAll(const std::string &source, const std::string from, const std::string to) {
        auto value = source;
        
        while (true) {
            auto pos = value.find(from);
            
            if (pos == std::string::npos) {
                break;
            }
    
            value.replace(pos, from.length(), to);
        }
        
        return value;
    }
    
    std::string normalizeColumnName(const std::string &columnName) {
        const std::vector<std::pair<std::string, std::string>> replacements {
            { "/* generated by server */", "" },
            { "`", "" },
            { " ", "" },
        };
        
        auto value = columnName;
        
        for (const auto &pair: replacements) {
            value = replaceAll(value, pair.first, pair.second);
        }
        
        return value;
    }
}